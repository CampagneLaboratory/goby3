package org.campagnelab.dl.varanalysis.protobuf;

option java_package = "org.campagnelab.dl.varanalysis.protobuf";

option optimize_for = SPEED;

/**
One such message per position in the genome that we observe. These records will be written to collections and
packed in a binary file.
*/

message BaseInformation {
    /** Index of the reference sequence where this base is observed in the genome. */
    required uint32 reference_index = 1;
    /**  The position in the reference sequence of the genome. */
    required uint32 position = 2;

    /** Whether this base was mutated in simulation. */
    optional bool mutated = 3;

    /** The base we have introduced in the simulation. Always length 1. */
    optional string mutatedBase = 4;
    /** The index of the counts array where the mutated element was introduced. */
    optional uint32 indexOfMutatedBase = 7;

    /** The frequency with which this base was mutated by the mutator. */
    optional float frequencyOfMutation = 6;
    /**
    The base present at the position in the genome/reference sequence.
    */
    optional string referenceBase = 5;

    /** A set of samples (ie germline,somatic). */
    repeated SampleInfo samples = 8;

}

/**
Usually two SampleInfo messages, one germline and one somatic. Contain data about the samples the count info for each genotype.
*/
message SampleInfo {
    /** A number of bases were observed at the position. */
    repeated CountInfo counts = 1;

    /** flag to specify whether the relevant sample is from a tumor (ie somatic sample) */
    optional bool isTumor = 2;

    /** string encoding nicely formatted version of counts */
    optional string formattedCounts = 3;

}

message CountInfo {
    /**
      True iff genotype sequence observed in the sample matches the reference sequence. */
    required bool matchesReference = 1;
    /**
      Sequence of the genotype observed in the reference genome. Typically a single base, or an indel sequence. */
    required string fromSequence = 2;

    /**
      Sequence of the genotype observed in the sample. Typically a single base, or an indel sequence. */
    required string toSequence = 3;

    /** The number of times the genotype is observed in the sample in a read matching the forward strand. */
    required uint32 genotypeCountForwardStrand = 4;

    /** The number of times the genotype is observed in the sample in a read matching the reverse strand. */
    required uint32 genotypeCountReverseStrand = 5;

    /**
    Indicates whether this genotype is an indel. */
    optional bool isIndel = 15;

    /** The quality scores of all bases matching this genotype on the forward strand. Phred scale. */
    repeated NumberWithFrequency qualityScoresForwardStrand = 16;

    /** The quality scores of all bases matching this genotype on the reverse strand. Phred scale.  */
    repeated NumberWithFrequency qualityScoresReverseStrand = 17;

    /** The index in the read of  all bases matching this genotype on the forward strand */
    repeated NumberWithFrequency readIndicesForwardStrand = 18;

    /** The index in the read of  all bases matching this genotype on the reverse strand */
    repeated NumberWithFrequency readIndicesReverseStrand = 19;

    /** True iff the genotype is called in this sample. In other words, this field is true when the genotype caller believes
     that this genotype is present in the sample. */
    optional bool isCalled = 20;
}

message NumberWithFrequency {
    required uint32 number = 1;
    required uint32 frequency = 2;

}